{"version":3,"sources":["webpack:///./src/templates/releases.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./static/images/logos/iofog.png"],"names":["ReleasesTemplate","render","_this$props","this","props","pageContext","data","slug","postNode","markdownRemark","frontmatter","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","location","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_4__","postPath","postSEO","className","src","alt","href","ref","postRef","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","SEO","title","url","window","origin","config","siteUrl","schemaOrgJSONLD","@context","@type","name","alternateName","siteTitleAlt","content","siteLogo","type","JSON","stringify","property","siteFBAppID","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","undefined","__webpack_require__","p"],"mappings":"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","file":"component---src-templates-releases-jsx-00b0a4d4ad35eae24f36.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport SEO from '../components/SEO/SEO';\n\nexport default class ReleasesTemplate extends React.Component {\n  render() {\n    const { pageContext, data } = this.props;\n    const { slug } = pageContext;\n    const postNode = data.markdownRemark;\n    const post = postNode.frontmatter;\n\n    return (\n      <Layout location={slug}>\n        <Helmet>\n          <title>Eclipse ioFog Releases</title>\n        </Helmet>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <div className=\"container entry\">\n          <section className=\"row community\">\n            <section className=\"col-md-12\">\n              <h1>Releases</h1>\n              <aside className=\"notifications note\">\n                <h3>\n                  <img src=\"/images/icos/ico-note.svg\" alt=\"\" /> Want to install\n                  or upgrade?\n                </h3>\n                <p>\n                  This page contains a list of releases and their changes, but\n                  installing or upgrading an Eclipse ioFog<sup>TM</sup> network\n                  involves multiple components.\n                </p>\n                <p>\n                  See the{' '}\n                  <a href=\"/docs/getting-started/setup-your-controllers.html\">\n                    setup documentation\n                  </a>{' '}\n                  to install or upgrade ioFog .\n                </p>\n              </aside>\n              <div\n                ref={this.postRef}\n                dangerouslySetInnerHTML={{ __html: postNode.html }}\n              />\n            </section>\n          </section>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query PostsBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport urljoin from 'url-join';\nimport config from '../../../data/SiteConfig';\nimport siteLogo from '../../../static/images/logos/iofog.png';\n\nclass SEO extends Component {\n  render() {\n    const { title, postNode, postPath } = this.props;\n    const siteUrl = typeof window !== 'undefined' ? window.location.origin : '';\n    const url = config.siteUrl + postPath;\n\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n      }\n    ];\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"image\" content={siteLogo} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={url} />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:image\" content={siteLogo} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : ''}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:image\" content={siteLogo} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","module.exports = __webpack_public_path__ + \"static/iofog-ed766632cbd821903a9e8a20172a92d5.png\";"],"sourceRoot":""}