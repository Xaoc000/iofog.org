{"data":{"markdownRemark":{"html":"<h1 id=\"json-rest-api-and-open-weather-map-microservices\"><a href=\"#json-rest-api-and-open-weather-map-microservices\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON REST API and Open Weather Map Microservices</h1>\n<h2 id=\"json-rest-api\"><a href=\"#json-rest-api\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON REST API</h2>\n<p><strong>JSON REST API</strong> is a system container that provides a restful endpoint and allows to transform the data generated by a microservice.</p>\n<p>The <strong>config</strong> for the container should look in the following way:</p>\n<p><strong>{\"buffersize\":3,\"contentdataencoding\":\"utf8\",\"contextdataencoding\":\"utf8\",\"outputfields\":{\"publisher\":\"source\",\"contentdata\":\"temperature\",\"timestamp\":\"time\"}}</strong></p>\n<p><strong>Config explanation:</strong></p>\n<p><em>{\"buffersize\":3} - this instructs the microservice to show last 3 messages</em></p>\n<p><em>\"publisher\" - the uuid of ms sent messages</em></p>\n<p><em>\"contentdata\" - message format</em></p>\n<p>E.g. if we route the microservice with Open Weather Map microservice, this will allow to access the weather data in a browser or in any other application or any device cloud.</p>\n<h2 id=\"open-weather-map\"><a href=\"#open-weather-map\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Open Weather Map</h2>\n<p><strong>Open Weather Map</strong> is a system container that retrieves the data from <a href=\"https://openweathermap.org/\">https://openweathermap.org/</a>.</p>\n<p>The <strong>config</strong> for the container should look in the following way:</p>\n<p><strong>{\"citycode\":\"5391997\",\"apikey\":\"6141811a6136148a00133488eadff0fb\",\"frequency\":1000}</strong></p>\n<p><strong>Config explanation:</strong></p>\n<p><em>\"citycode\" - the code of the city</em></p>\n<p><em>\"apikey\" - the api key of open weather map</em></p>\n<p><em>\"frequency\" - the frequency of message sending in millis</em></p>\n<h2 id=\"launching-the-containers\"><a href=\"#launching-the-containers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Launching the Containers</h2>\n<p>Enter iofog-controller user add -f first-name -l last-name -e email -p password in terminal.</p>\n<p>Enter iofog-controller flow add -n name -d description -a -u user-id in terminal.</p>\n<p>Enter iofog-controller iofog add -n name -l location -t latitude -g longitude -d description -D docker-url -M disk-limit -T disk-directory -m memory-limit -c cpu-limit -G log-limit -Y log-directory -C log-file-count -s status-frequency -F change-frequency -Q device-frequency -B -w -a -y fog-type -u user-id in terminal.</p>\n<p>Enter iofog-controller iofog provisioning-key -i node-id in terminal.</p>\n<p>Enter iofog-agent provision {provision-key}.</p>\n<p>iofog-controller microservice add -n jsonRestApi -c 7 -F flow-id -I iofog-uuid -g '{\"buffersize\":3,\"contentdataencoding\":\"utf8\",\"contextdataencoding\":\"utf8\",\"outputfields\":{\"publisher\":\"source\",\"contentdata\":\"temperature\",\"timestamp\":\"time\"}}' -R -p 80:5555 -u user-id</p>\n<p>iofog-controller microservice add -n weather -c 6 -F flow-id -I iofog-uuid -g '{\"citycode\":\"5391997\",\"apikey\":\"6141811a6136148a00133488eadff0fb\",\"frequency\":1000}' -R -u user-id</p>\n<p>iofog-controller microservice route-create --route openweather-uuid:jsonrestapi-uuid</p>\n<blockquote>\n<p><strong>catalog-id = 7 (JSON REST API)</strong></p>\n<p><strong>catalog-id = 6 (Open Weather Map)</strong></p>\n</blockquote>\n<p><strong>Request</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\">$ curl localhost<span class=\"token operator\">:</span><span class=\"token number\">5555</span></code></pre>\n      </div>\n<p><strong>Response</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CmdxYrfZmPRLTH7rXMwKpW92zRHtggxw\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"temperature\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{\\\"coord\\\":{\\\"lon\\\":-122.45,\\\"lat\\\":37.77},\\\"weather\\\":[{\\\"id\\\":801,\\\"main\\\":\\\"Clouds\\\",\\\"description\\\":\\\"few clouds\\\",\\\"icon\\\":\\\"02n\\\"}],\\\"base\\\":\\\"stations\\\",\\\"main\\\":{\\\"temp\\\":279.46,\\\"pressure\\\":1028,\\\"humidity\\\":65,\\\"temp_min\\\":276.45,\\\"temp_max\\\":282.55},\\\"visibility\\\":16093,\\\"wind\\\":{\\\"speed\\\":1.5,\\\"deg\\\":320},\\\"clouds\\\":{\\\"all\\\":20},\\\"dt\\\":1548161760,\\\"sys\\\":{\\\"type\\\":1,\\\"id\\\":5817,\\\"message\\\":0.0037,\\\"country\\\":\\\"US\\\",\\\"sunrise\\\":1548170436,\\\"sunset\\\":1548206570},\\\"id\\\":5391997,\\\"name\\\":\\\"San Francisco County\\\",\\\"cod\\\":200}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"time\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1548163407511</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CmdxYrfZmPRLTH7rXMwKpW92zRHtggxw\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"temperature\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{\\\"coord\\\":{\\\"lon\\\":-122.45,\\\"lat\\\":37.77},\\\"weather\\\":[{\\\"id\\\":801,\\\"main\\\":\\\"Clouds\\\",\\\"description\\\":\\\"few clouds\\\",\\\"icon\\\":\\\"02n\\\"}],\\\"base\\\":\\\"stations\\\",\\\"main\\\":{\\\"temp\\\":279.46,\\\"pressure\\\":1028,\\\"humidity\\\":65,\\\"temp_min\\\":276.45,\\\"temp_max\\\":282.55},\\\"visibility\\\":16093,\\\"wind\\\":{\\\"speed\\\":1.5,\\\"deg\\\":320},\\\"clouds\\\":{\\\"all\\\":20},\\\"dt\\\":1548161760,\\\"sys\\\":{\\\"type\\\":1,\\\"id\\\":5817,\\\"message\\\":0.0037,\\\"country\\\":\\\"US\\\",\\\"sunrise\\\":1548170436,\\\"sunset\\\":1548206570},\\\"id\\\":5391997,\\\"name\\\":\\\"San Francisco County\\\",\\\"cod\\\":200}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"time\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1548163408502</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"source\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CmdxYrfZmPRLTH7rXMwKpW92zRHtggxw\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"temperature\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{\\\"coord\\\":{\\\"lon\\\":-122.45,\\\"lat\\\":37.77},\\\"weather\\\":[{\\\"id\\\":801,\\\"main\\\":\\\"Clouds\\\",\\\"description\\\":\\\"few clouds\\\",\\\"icon\\\":\\\"02n\\\"}],\\\"base\\\":\\\"stations\\\",\\\"main\\\":{\\\"temp\\\":279.46,\\\"pressure\\\":1028,\\\"humidity\\\":65,\\\"temp_min\\\":276.45,\\\"temp_max\\\":282.55},\\\"visibility\\\":16093,\\\"wind\\\":{\\\"speed\\\":1.5,\\\"deg\\\":320},\\\"clouds\\\":{\\\"all\\\":20},\\\"dt\\\":1548161760,\\\"sys\\\":{\\\"type\\\":1,\\\"id\\\":5817,\\\"message\\\":0.0037,\\\"country\\\":\\\"US\\\",\\\"sunrise\\\":1548170436,\\\"sunset\\\":1548206570},\\\"id\\\":5391997,\\\"name\\\":\\\"San Francisco County\\\",\\\"cod\\\":200}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"time\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1548163409419</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre>\n      </div>","fields":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}},"allConfigJson":{"edges":[{"node":{"version":"1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/manage-your-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/create-your-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/deploy-your-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.0.0/"}}}]}},"pageContext":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}}