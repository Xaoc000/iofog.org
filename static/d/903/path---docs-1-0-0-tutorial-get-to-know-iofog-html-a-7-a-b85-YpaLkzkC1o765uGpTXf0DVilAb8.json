{"data":{"markdownRemark":{"html":"<h1 id=\"get-to-know-iofog\"><a href=\"#get-to-know-iofog\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get To Know ioFog</h1>\n<p>In this step of the tutorial we'll better familiarize ourselves with the ioFog environment <a href=\"introduction.html\">we just set up</a> in the previous step.</p>\n<h2 id=\"docker-environment\"><a href=\"#docker-environment\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker Environment</h2>\n<p>To verify everything is up and working correctly, run <code class=\"language-text\">docker ps</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">docker ps</code></pre>\n      </div>\n<p>You should see a number of containers running.</p>\n<p>We can also see that in the PORTS column some of these containers have published <a href=\"https://docs.docker.com/config/containers/container-networking/\">port mappings</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">PORTS                      NAMES\n0.0.0.0:51121-&gt;51121/tcp   iofog-controller\n                           iofog-agent-1\n                           iofog-agent-2\n0.0.0.0:53321-&gt;8080/tcp    iofog-connector</code></pre>\n      </div>\n<p>For example, there's a microservice running an instance of <a href=\"https://github.com/Freeboard/freeboard\">Freeboard</a>, an open source visualization dashboard for IoT devices. It's running a web server that serves the dashboard, try it out: <a href=\"http://localhost:10102/?load=dashboard.json\">http://localhost:10102/?load=dashboard.json</a></p>\n<p>The Freeboard microservice doesn't know it's running locally, so it could just as well be running on real edge node hardware!</p>\n<h2 id=\"shell-into-your-containers\"><a href=\"#shell-into-your-containers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shell Into Your Containers</h2>\n<p>Our tutorial environment has four containers, the most important are: iofog-agent-1, iofog-agent-2, iofog-controller, and iofog-connector. As their names imply, they contain two <a href=\"../agents/overview.html\">Agents</a>, a <a href=\"../controllers/overview.html\">Controller</a>, and a <a href=\"../connectors/overview.html\">Connector</a>.</p>\n<p>You can think of each of these containers as if they were separate devices. In production, your Controller is most often running on a cloud server and your Agents are each running on individual edge hardware nodes in the field. The Controller is controlling the Agent the same way it would if the devices were hundreds of miles away, and the Connector can broker communication between any microservices you run.</p>\n<p>To create a shell (bash) environment into one of your containers you can use the <a href=\"https://docs.docker.com/engine/reference/commandline/exec/\"><code class=\"language-text\">docker exec -ti</code></a> command.</p>\n<h4 id=\"agents-containers\"><a href=\"#agents-containers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Agent's Containers</h4>\n<p>Let's start a shell into one of the containers that is running one the two Agents.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">docker exec -ti iofog-agent-1 bash</code></pre>\n      </div>\n<p>Now we're inside the first Agent container and can use the <code class=\"language-text\">iofog-agent</code> daemon to find out its status. Try this one:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-agent status\n\n  ioFog daemon                : RUNNING\n  Memory Usage                : about 95.28 MiB\n  Disk Usage                  : about 12.55 MiB\n  CPU Usage                   : about 6.70%\n  Running Microservices       : 2\n  Connection to Controller    : ok\n  Messages Processed          : about 54,856\n  System Time                 : 01/01/2018 12:00 AM</code></pre>\n      </div>\n<p>There's also <code class=\"language-text\">iofog-agent info</code>, used to view this Agent's settings:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-agent info\n\n  Iofog UUID                               : j83KyXWWd2gZ4K8wXYDDYhVK2834XVnB\n  IP Address                               : 172.17.0.4\n  Network Interface                        : eth0\n  Developer&#39;s Mode                         : on\n  ioFog Controller                         : http://iofog-controller:51121/api/v3/\n  ioFog Certificate                        : /etc/iofog-agent/cert.crt\n  Docker URL                               : unix:///var/run/docker.sock\n  Disk Usage Limit                         : 50.00 GiB\n  Message Storage Directory                : /var/lib/iofog-agent/\n  Memory RAM Limit                         : 4096.00 MiB\n  CPU Usage Limit                          : 80.00%\n  Log Disk Limit                           : 10.00 GiB\n  Log File Directory                       : /var/log/iofog-agent/\n  Log Rolling File Count                   : 10\n  Status Update Frequency                  : 30\n  Get Changes Frequency                    : 60\n  Scan Devices Frequency                   : 60\n  Post Diagnostics Frequency               : 10\n  Isolated Docker Containers Mode          : off\n  GPS mode                                 : off\n  GPS coordinates(lat,lon)                 :\n  Fog type                                 : intel_amd</code></pre>\n      </div>\n<p>When you're ready to leave the current container, simply use <code class=\"language-text\">exit</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">exit</code></pre>\n      </div>\n<p>This tutorial has another Agent too, <code class=\"language-text\">iofog-agent-2</code>, you might check it out as well!</p>\n<aside class=\"notifications note\">\n  <h3><img src=\"/images/icos/ico-note.svg\" alt=\"\"> Learn more Agent commands</h3>\n  <p>If you want to learn about all the possible commands you can use on iofog-agent checkout the <a href=\"../agents/cli-usage.html\">CLI Usage guide</a>.</p>\n</aside>\n<h4 id=\"controllers-container\"><a href=\"#controllers-container\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Controller's Container</h4>\n<p>After we've exited from our Agent's containers, let's start a shell into the Controller's container:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">docker exec -ti iofog-controller bash</code></pre>\n      </div>\n<p>Since this \"device\" is running our Controller daemon, inside this shell we can now issue commands to it. Try this one:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-controller iofog list</code></pre>\n      </div>\n<p>This should give you a JSON response containing a list of edge nodes already registered with the Controller. In our case we should get two nodes, <code class=\"language-text\">&quot;name&quot;: &quot;Agent 1&quot;</code> and <code class=\"language-text\">&quot;name&quot;: &quot;Agent 2&quot;</code>. These \"nodes\" are the container environments iofog-agent-1 and iofog-agent-2. Remember that in production, instead of being containers running locally on your machine, these nodes would be real edge hardware, part of your Edge Compute Network, where your microservices run.</p>\n<p>When you want to exit that session, you can use the <code class=\"language-text\">exit</code> command again.</p>\n<h2 id=\"manage-your-microservices\"><a href=\"#manage-your-microservices\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Manage Your Microservices</h2>\n<p>Now that we know our way around a bit, let's learn how to manage and launch microservices!</p>\n<p><a href=\"manage-your-microservices.html\">Continue To Next Step</a>.</p>","fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}},"allConfigJson":{"edges":[{"node":{"version":"1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/manage-your-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/create-your-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/deploy-your-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.0.0/"}}}]}},"pageContext":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}